openapi: 3.0.0
info:
  title: bora-rachar-service
  description: servico responsavel por prover dados para o app bora-rachar
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
paths:
#  /usuarios:
#    get:
#      tags:
#        - Usuarios
#      summary: retorna usuarios.
#      parameters:
#        - $ref: '#/components/parameters/email-header'
#      responses:
#        '200':
#          description: ok
#          content:
#            application/json:
#              schema:
#                items:
#                  $ref: '#/components/schemas/Usuario'
#    post:
#      tags:
#        - Usuarios
#      responses:
#        '200':
#          description: ok
#  /usuarios/{idUsuario}:
#    get:
#      tags:
#        - Usuarios
#      responses:
#        '200':
#          description: ok
#    put:
#      tags:
#        - Usuarios
#      summary: cria ou altera usuario.
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UsuarioRequestBody'
#      responses:
#        '200':
#          description: ok
#          content:
#            application/json:
#              schema:
#                items:
#                  $ref: '#/components/schemas/Usuario'
#    delete:
#      tags:
#        - Usuarios
#      responses:
#        '200':
#          description: ok
#
#  /usuarios/{idUsuario}/despesas/consolidacoes:
#    get:
#      tags:
#        - Usuarios
#      responses:
#        '200':
#          description: ok
#
#  /grupos:
#    get:
#      tags:
#        - Grupos
#      summary: retorna grupos.
#      parameters:
#         - $ref: '#/components/parameters/id-grupo-query'
#      responses:
#        '200':
#          description: ok
#          content:
#            application/json:
#              schema:
#                items:
#                  $ref: '#/components/schemas/GrupoResponse'
#    post:
#      tags:
#        - Grupos
#      summary: cria um grupo.
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GrupoRequestBody'
#      responses:
#        '200':
#          description: ok
#
#  /grupos/{idGrupo}:
#    get:
#      tags:
#        - Grupos
#      responses:
#        '200':
#          description: ok
#    put:
#      tags:
#        - Grupos
#      summary: altera configuracoes de um grupo.
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/GrupoRequestBody'
#      responses:
#        '200':    # status code
#          description: A JSON array of user names
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Grupo'
#    delete:
#      tags:
#        - Grupos
#      responses:
#        '200':
#          description: ok
#  /despesas:
#    get:
#      tags:
#        - Despesas
#      summary: retorna despesas.
#      parameters:
#        - $ref: '#/components/parameters/id-grupo-query'
#      responses:
#        '200':
#          description: ok
#          content:
#            application/json:
#              schema:
#                items:
#                  $ref: '#/components/schemas/DespesasResponse'
#    post:
#      tags:
#        - Despesas
#      summary: cria uma despesa.
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/DespesasRequestBody'
#      responses:
#        '200':
#          description: ok
#  /despesas/{idDespesa}:
#    get:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#    put:
#      tags:
#        - Despesas
#      summary: altera configuracoes de uma despesas.
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/DespesasRequestBody'
#      responses:
#        '200':
#          description: ok
#    delete:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#
#
#  /despesas/{idDespesa}/comentarios:
#    get:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#    post:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#
#  /despesas/{idDespesa}/comentarios/{idComentario}:
#    put:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#    delete:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#
#  /despesas/{idDespesa}/divisoes-pagamento:
#    get:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#    put:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#    delete:
#      tags:
#        - Despesas
#      responses:
#        '200':
#          description: ok
#
#
#  /telas/login:
#    post:
#      tags:
#        - Telas
#      responses:
#        '200':
#          description: ok

  /screens/activities:
    get:
      tags:
        - Telas
      description: ""
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesScreenResponse'

  /screens/groups:
    get:
      tags:
        - Telas
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsScreenResponse'

  /telas/grupos/{idGrupo}:
    get:
      tags:
        - Telas
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetailsScreenResponse'

  /telas/despesas:
    post:
      tags:
        - Telas
      responses:
        '200':
          description: ok


  /telas/despesas/{idDespesa}:
    put:
      tags:
        - Telas
      responses:
        '200':
          description: ok
  /telas/contatos:
    get:
      tags:
        - Telas
      responses:
        '200':
          description: ok
    #filtro usuario

components:
  schemas:
    Pagination:
      properties:
        totalRecords:
          type: number
          example: 100
        currentPage:
          type: number
          example: 0
        totalPages:
          type: number
          example: 7
    ActivitiesScreenResponse:
      properties:
        meta:
          $ref: '#/components/schemas/Pagination'
        balance:
          $ref: '#/components/schemas/SummaryBalance'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivitiesScreenActivities'
    ActivitiesScreenActivities:
      properties:
        type:
          type: string
          enum:
            - RECEIVED_PAYMENT
            - EXECUTED_PAYMENT
            - EXPENSE_PARTICIPATION
            - NEW_GROUP_PARTICIPANT
        userName:
          type: string
          example: "Thiago D."
        userId:
          type: string
          example: "Thiago D."
        userPhoto:
          type: string
          example: "url"
        groupName:
          type: string
          example: "Quartel Otaku"
        value:
          type: number
          example: 15.68
        date:
          type: string
          format: date-time
    SummaryBalance:
      properties:
        amountToPay:
          type: number
          example: 19.80
        amountToReceive:
          type: number
          example: 250
    GroupsScreenResponse:
      properties:
        balance:
          $ref: '#/components/schemas/SummaryBalance'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupsScreenGroup'
    GroupsScreenGroup:
      properties:
        groupId:
          type: string
          example: "id"
        groupName:
          type: string
          example: "Quartel Otaku"
        groupPhoto:
          type: string
          example: "link"
        amountToPay:
          type: number
          example: 19.80
        amountToReceive:
          type: number
          example: 250
        participants:
          type: array
          items:
            $ref: '#/components/schemas/GroupsScreenParticipant'
    GroupsScreenParticipant:
      properties:
        userName:
          type: string
          example: "Pierre"
        userId:
          type: string
          example: "userId"
        userPhoto:
          type: string
          example: "link"
    GroupDetailsScreenResponse:
      properties:
        meta:
          $ref: '#/components/schemas/Pagination'
        groupInfo:
          properties:
            groupId:
              type: string
              example: "id"
            groupName:
              type: string
              example: "Quartel Otaku"
            groupPhoto:
              type: string
              example: "link"
            participants:
              type: array
              items:
                properties:
                  userId:
                    type: string
                    example: "userId"
                  userName:
                    type: string
                    example: "Pierre"
                  userPhoto:
                    type: string
                    example: "link"
                  balance:
                    $ref: '#/components/schemas/GroupDetailsScreenBalance'
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/GroupDetailsScreenExpense'
    GroupDetailsScreenExpense:
      properties:
        expenseId:
          type: string
          example: "expenseID"
        expensePhoto:
          type: string
          example: "link"
        expenseDescription:
          type: string
          example: "Uber volta da escalada"
        category:
          $ref: '#/components/schemas/ExpenseCategory'
        createdBy:
          properties:
            userId:
              type: string
              example: "userId"
            userName:
              type: string
              example: "Pierre"
            userPhoto:
              type: string
              example: "link"
        createdAt:
          type: string
          format: date-time
        involved:
          type: array
          items:
            properties:
              userId:
                type: string
                example: "userId"
              userName:
                type: string
                example: "Pierre"
              userPhoto:
                type: string
                example: "link"
              balance:
                type: number
                example: 19.80
        commentary:
          properties:
            userId:
              type: string
              example: "userId"
            userName:
              type: string
              example: "Pierre"
            userPhoto:
              type: string
              example: "link"
            commentary:
              type: string
              example: "vou pagar nao hehe"
            date:
              type: string
              format: date-time
    ExpenseCategory:
      type: string
      enum:
        - TRANSPORTATION
        - ENTERTAINMENT
        - FOOD
    GroupDetailsScreenBalance:
      properties:
        amountToPay:
          properties:
            value:
              type: number
              example: 9.90
            payTo:
              type: array
              items:
                properties:
                  userId:
                    type: string
                    example: "userId"
                  userName:
                    type: string
                    example: "Pierre"
                  userPhoto:
                    type: string
                    example: "link"
                  value:
                    type: number
                    example: 19.80
        amountToReceive:
          properties:
            value:
              type: number
              example: 9.90
            receiveFrom:
              type: array
              items:
                properties:
                  userId:
                    type: string
                    example: "userId"
                  userName:
                    type: string
                    example: "Pierre"
                  userPhoto:
                    type: string
                    example: "link"
                  value:
                    type: number
                    example: 19.80

  #    UsuarioRequestBody:
#      allOf:
#        - $ref: "#/components/schemas/Usuario"
#    Usuario:
#      properties:
#        nome:
#          type: string
#        email:
#          type: string
#    GrupoResponse:
#      properties:
#        id:
#          type: string
#      allOf:
#        - $ref: '#/components/schemas/Grupo'
#    GrupoRequestBody:
#      allOf:
#        - $ref: '#/components/schemas/Grupo'
#    Grupo:
#      properties:
#        nome:
#          type: string
#        imagem:
#          type: string
#        cododigoAcesso:
#          type: string
#        criadoPor:
#          type: string
#        dataCriacao:
#          type: string
#          format: date-time
#    DespesasRequestBody:
#      allOf:
#        - $ref: '#/components/schemas/Despesas'
#    DespesasResponse:
#      properties:
#        id:
#          type: string
#      allOf:
#        - $ref: '#/components/schemas/Despesas'
#    Despesas:
#      properties:
#        descricao:
#          type: string
#        categoria:
#          type: string

  parameters:
    limit:
      required: true
      in: query
      name: limit
      schema:
        type: integer
    page:
      required: true
      in: query
      name: page
      schema:
        type: integer
    id-grupo-query:
      in: query
      name: idGrupo
      required: false
      schema:
        type: string
      description: identificador de um grupo
    email-header:
      in: header
      name: email
      required: false
      schema:
        type: string
    
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []